import time
import matplotlib.pyplot as plt
from pykociemba import solve

# Test cases from test_solve.py
test_cases = [
    "BBURUDBFUFFFRRFUUFLULUFUDLRRDBBDBDBLUDDFLLRRBRLLLBRDDF",
    "FDLUUURLFLBDFRRDLBBBUBFLDDLFBBUDUBRLURDFLRUFRFLRFBDUDR",
    "UDRFULDRBLDUBRDUFBFBDRFDFURLBBLDRDURLLRULUFBUFRBFBFDLL",
    "LRLLURRLBDUULRFUFLFDRUFBRBLDUFDDRRBDDFURLLBFFBDBUBBFDU",
    "UUULULFLFDUBDRRDBBUFLFFLBRRLDFFDDBUUFBRRLDRUDLBLFBBRRD",
    "LRRFUUBDLFBBLRDLLRUFDLFURLFBBUBDDDDUDULRLFRRDUUBRBFFBF",
    "FBRDULFBRFBBRRRDLBRRUDFUUDFLBLFDUBFDLLDLLFRRBUUUDBFLUD",
    "FLBUULFFLFDURRDBUBUUDDFFBRDDBLRDRFLLRLRULFUDRRBDBBBUFL",
    "UBLLURBDLDDFRRLRFLDFBLFURFFFLDBDULBUBDRRLBDDUUURUBFBRF",
    "UDLFUBLRFRDDLRFDBDBBDDFUUUBFRRLDUFFLBLUFLRRBLFLRUBDBRU",
    "URBLUBDDBURDLRDLDBFBLLFFULDBBFUDFLRRRURBLDFFRLUFRBUDFU",
    "BLBDUULUDBLRDRFLBUUBLRFFURDLDFRDRRUFRBFLLUFFBDDULBBRFD",
    "ULFUUURRURLLLRRUBLDFFLFFBDRURBRDDDFBFBFFLDBBLDBLUBDDUR",
    "LUFBUUUDDLLRDRRDDLBFFFFRUDBLLRRDBRBFDURFLRFUBUFBBBLULD",
    "UDDBURDDBUFLFRLFDFRRLRFLUBRFDUBDFRFLBLBRLUFULBLRUBBDUD",
    "UUBUUBUDBDRLFRFDUDBBRBFRFBRUUFDDLLDFFRRDLLBRRUFLLBFLLD",
    "BDLRULLRRDFFBRLDRLBFFFFUUDBBRRLDURDDLBULLUUBRUBDUBDFFF",
    "LFRUULBBDBFBDRBLFRDDLLFLFRDRBFDDUBUUURRFLBLRDURFUBDFLU",
    "UBBRUDBLFRBRRRUFBBLFDDFFFULUFDDDLBLUFUDBLRLFRDULLBRRDU",
    "FRRUUFURDBLFRRFFLUBDLRFBLFUFULLDDBBBULRDLURBDDFRDBBLUD",
    "ULDFUBBRRBDLFRBFFLUUDBFLRFDUDRLDUFUDRRLDLUUDBBBFRBRFLL",
    "ULLLURFBBDUBBRUBLFURRDFDRFUDRRFDBUULLURRLLLDFDFBBBDDFF",
    "BDBDURFFRDFDRRLUBLLLFBFURFBBULDDURLDRFURLRUBDLLUUBDFBF",
    "DRUUUDDBRULLBRBFFLLLBFFDBURLFUUDLRRURRFFLDFLDFDBUBRBBD",
    "BDLLURUFRDBDRRRDFURLFLFUBFLRDBLDUBBLDDFFLBLUUFBRDBRFUU",
    "RRRUURUUBDDBFRBFLURLRFFRLULDBDLDBLLLDFFULDUDBUBFDBRFFB",
    "LFRLUUBBLBFUDRRUUFDDUDFFULLBUFLDBLFDFDRBLRBBRFRDUBRRLD",
    "FRRBUBDDURLBDRDLUDRLFLFBLBFDUUFDRLUFRRBRLFUUBUDDFBFLLB",
    "DBUFUFDFUBLLLRURUBLRRDFBFLDUUBFDRDDLFUFBLLLDRFDRBBRURB",
    "BFRFUBBLBLRFDRBDUUUBDFFRLFFULLDDRFDRDULLLRRLFDDRUBUBBU",
    "BFDDURFBRDBLURLBUUDLFRFBDRURURLDLFFFUBLFLDUFBBRLDBDRUL",
    "LRBUULRDRDBLLRBDDUFRFDFURLLBFBUDBBFLFBUDLFURDUFDRBLFUR",
    "RBBDUBBRRFLDFRFFRRDUUFFUDFULLLLDBBLBDBRDLRLUFLUFDBRUDU",
    "FRBUURUDBLBRDRLDFDRBDDFLUFFLULDDLBLRLBFFLRUFBDUUUBRFBR",
    "FLURURDBRBDBBRUUUUFLDFFULUFFLRDDRLBRLFRFLLBBDLDUFBDBRD",
    "BULRUULFRDBDDRLUDRULFFFBLUBDRLFDLURBDBFLLDFRBFFRUBBUDR",
    "FFRRULFBDRFBURLFBUDLBRFFDBRBUUDDDLRLRULRLDULLUDDUBFFBB",
    "DUFBUDBRDBRUFRURRBDFLLFDDLBLFULDURBLFDRDLBUUFLBRFBLURF",
    "DRRUURBRURUBDRLUBFDBFBFBLFLDRFFDULLDLFRDLLUDBUDFUBLRFB",
    "BRLFUDLDRFLUFRUFFLFBURFRUUDFBRUDDRRBRLDLLBDLLBUUFBBDDB",
    "UULFUFDLRFDBBRDBLFLFULFUDDURBRRDDURDFUFLLBBFBDRLRBURBL",
    "DUDUUUDBUFRFRRBRDUBLLUFDUBFBDDFDLUFFRBLFLFBRRLLBRBDRLL",
    "LDRLUDRLFURBRRRRDDBBRFFUUBFLUDUDLLBFUFDFLUBLBUBFFBDLRD",
    "FUBUUFLBLURRDRFFUDDUFBFRUBDBLRRDLBFFURBLLDLBRDFRLBDLDU",
    "DFRBURUDDLBDRRFUDULLFLFUULFFBRRDRFBRBDBFLUDFLBULDBLBUR",
    "RLRUURDLFUFDBRLFRBLFRFFDDLUFULRDUDFLUBFRLULBRBDBBBDUDB",
    "BBURULRUULFLBRRBFBDFBFFDFRDUULUDRDDUDBFLLDFBRFLRDBURLL",
    "LBLLUBUFUBRUURFDLRRLRDFLDFLFRBRDDLBDFBFRLFFDRBUDUBUBDU",
    "FUFBUBURDFLRDRFBUFLDRFFLBDDDBLFDLURLLUBFLURDRURULBRDBB",
    "RURFUDDDFLBBFRULUBFFUDFLDLDRBFBDLBDLFRRULRDRBURUBBFULL",
    "DBRDULBFBUDUDRRULLDRLLFRLBRFUBUDUDDFBFRBLFRFDFLLUBRUBF",
    "URBLUBFDUBRRLRFLULRLRBFFLDDBFFLDRFFBRBDBLUUUUDDFRBDDUL",
    "BUULURRDFRURFRBUFUBLDDFLFBFDRRBDRUULLBDRLFBULBFDDBDFLL",
    "FURBUDLRRUBDFRLBDFBUBFFRUDDRRLDDFULLRUUBLULLFBLDBBRDFF",
    "LLRDUBUBBURBBRBLRRRLLLFUBFDDRFFDUULFDFFDLULURUDBDBRDFF",
    "FDRUUBBBLDRBDRLFFFDUBLFRBURURUFDRFFUDLRFLBDLLUBLDBDLUR",
    "FBBDULLFRUBRLRLDFUDRBBFFUURLLFUDDDBLURBFLRFRBDURDBUFDL",
    "LLBDURRDURBDLRLRULBBFBFDDBBFUUFDRLFFBRDFLLDDRLUUFBRUUF",
    "LFFDUBLRDLLDURLBDFDUFLFFFDUUBRRDRDBUBLBRLUBBRRDUFBFLUR",
    "FBUDUBBRBUURLRRUFLDBLLFDRFFDLRFDRFUBDBRRLUUDFBLLUBDDFL",
    "ULBFURBDBDDDFRRBFFUBRLFUFRURBRUDDDLURRLLLFFBDLDFUBULBL",
    "DUBBUFLFFLRLDRBBLRDUUDFLLRRFBDDDURRUFLBFLRBFDUBRDBLFUU",
    "BRDFUUUUULBFDRDDDFRLBUFRLBBUDRFDLBLDRRFBLFDLFLUUFBRRBL",
    "DBRLUFFUBDLFBRFLBLLFRFFUBLBRUDDDDFUULDUBLRRRUDLFDBRBRU",
    "LLURULDUDLBLURBBRFRFFRFLFRURBRFDDBBRDFBFLULDDFDBUBLUDU",
    "UFLRULBLUBUBBRFRDFDFRBFLFUFLRDDDRBBLRFRBLULLUDDFUBDDRU",
    "BRRLUFBFFLRFDRUDLURDUFFRULFRDLRDUDBBLFULLUBUFDBDBBBLDR",
    "DRDUUBRRLBLLRRLUFDUFULFBFDLULFDDUDBBFRBDLUFFRBDRFBBRUL",
    "LLFLUBRURDLUFRDRURUBFRFULBDDRBRDRLDUBUBDLDDFBLFUBBFFLF",
    "LLBRUFUBBUURURDLLRBDLRFBBLFLUUDDFRRFFDRRLFUFDDBDLBBDUF",
    "FLLUUULLULBDRRFUFDUDBBFBBFRLRBBDURDBURFDLLFDDFURLBRRFD",
    "FURFUDBUDFLBFRBDRDUBRBFRULBFFRBDULDFUULRLRBDLULRLBDLFD",
    "BFFBUFUBFDRDDRDFRDBRLFFBBDUDLLBDUUFLUURLLLFLRRDLRBUBUR",
    "UFFDUULUUBFRLRFLDUDLRRFBBRDDUFDDFFBLLLBRLDDBRURBLBBFUR",
    "DDRBUUBUFUBFURLBRFDFRRFRFFULLRDDBLULBDRLLFUFUDRLDBBDLB",
    "BDRLUBDBDFRBFRRBFFRURRFUDDDLLLUDLFDUUUBBLFRRFUBLDBLLFU",
    "RFLUUFFDFDRBLRBRBRULLBFFUUFFFDLDDUDDURRBLRBULDDBLBUBRL",
    "DURFULUBUFDFLRFRUBLRLRFBFDBUBUFDRDFRBRBULDFLRDLLDBBDUL",
    "BRDFUBUBULULRRUDFUFRBDFUDFFRDLDDLFLFRULLLRDBBBFULBBRDR",
    "LFDLUUDRDBBBRRUBFLFFLBFURDUFBRUDDUBFFDRRLLBLURLDFBDURL",
    "FUDLUBDLFLRBURFUDLLDUFFLBUFURRBDFRDBRFFDLRBLLRBDUBRDBU",
    "LUFFUURDFDLURRDBBFUBLUFFBRDDDLLDRRLDBLBBLRUDRLFUFBURBF",
    "URDBUDLLBDFLBRUDLFBDRBFDDURLLFRDBULRBUUDLRLUFBFRFBRUFF",
    "RLFDUFFBLDUDBRLDFFLDBUFULLBBDRRDDFURURURLLLBURFBBBFURD",
    "BRDBUFBFBUURBRRFUUDLLDFDDDRLFULDLBULRURLLRDBFFFUBBDFRL",
    "BRBFUURBFRRDURLBDDFRDFFBBLRUDDLDRUBFRUUFLDLULLFUBBLLDF",
    "FLDRUBBRUBDRBRRLRFDFRDFUUUBFFDDDUULRDDRLLFBLLFULBBFUBL",
    "BFRLURUFFLFBBRRDLDLLUDFRULFRDLFDURBRLBBRLBDUFUDDDBUFUB",
    "BDFBUUFDLUFDLRUFURDBFLFDUURLBUDDRDLBDRLFLFLRBRFRLBRUBB",
    "FDLBUBRLUBUFDRURRBDURFFLLDUDFFRDFDLLDLFRLUBBBUBLRBDUFR",
    "BBFRURDDLBFRDRFDLDFLUDFRFDFLBLUDBRULDURULFBLUURRLBFBBU",
    "BDBBULRBRFBLLRDFFBURUDFUDUULFLUDRRFDDUBLLRFRFUBRLBFLDD",
    "URLBULDDULDBBRLRRFRRBFFLFLFDFDUDUURRBUBBLDLFLDFRUBDUBF",
    "LDUFULFRURDRLRULBDDFFRFBFBURDBBDUBFLULLDLURRDBFFLBRBUD",
    "FDBBUDUBRDBLLRFBRRBUFRFULDDUFLFDURLUDRRLLDDUFULLRBFFBB",
    "UFBBURLLBRFDBRRFURBDUDFLDBDLDRFDLUBDRUUFLRLDFLLFUBUBRF",
    "DURBULRULBUDRRRLDLDBULFFFBBULDDDRBBFLDFDLFUFRBFFUBLURR",
    "UFBLURRDLDURRRLUFFFBBFFDULRFFBRDUFBDLBUDLRLBLDDBUBLRUD",
    "FLBUUDFBDBFURRRUBLLULRFFLLFBDRBDLDRDRLUFLDBDURFDBBUFUR",
    "DRLUUBFBRBLURRLRUBLRDDFDLFUFUFFDBRDUBRUFLLFDDBFLUBLRBD",
]

def performance_test():
    solve_times = []
    for i, test_case in enumerate(test_cases):
        start_time = time.time()
        solve(test_case)
        end_time = time.time()
        solve_time = end_time - start_time
        solve_times.append(solve_time)
        print(f"Test case {i+1}/{len(test_cases)} solved in {solve_time:.4f} seconds.")

    # --- Performance Statistics ---
    min_time = min(solve_times)
    max_time = max(solve_times)
    avg_time = sum(solve_times) / len(solve_times)

    print("\n--- Performance Statistics ---")
    print(f"Minimum solve time: {min_time:.4f} seconds")
    print(f"Maximum solve time: {max_time:.4f} seconds")
    print(f"Average solve time: {avg_time:.4f} seconds")
    # --- Chart Generation ---
    plt.figure(figsize=(10, 6))
    plt.hist(solve_times, bins=20, edgecolor='black')
    plt.title('Distribution of Rubik\'s Cube Solve Times')
    plt.xlabel('Solve Time (seconds)')
    plt.ylabel('Number of Test Cases')
    plt.grid(True)
    plt.savefig('performance_chart.png')
    print("\nChart saved to performance_chart.png")

if __name__ == "__main__":
    performance_test()
